select * from HOUSEDATA.dbo.[Nashville Housing Data for Data Cleaning]


--rename a table
USE HOUSEDATA;   
GO  
EXEC sp_rename 'Nashville Housing Data for Data Cleaning', 'NashvilleHousing';

SELECT TOP (100) [UniqueID ] 
,[ParcelID]
,[LandUse]
,[PropertyAddress]
,[SaleDate]
,[SalePrice]
,[LegalReference]
,[SoldAsVacant]
,[OwnerName]
,[OwnerAddress]
,[Acreage]
,[TaxDistrict]
,[LandValue]
,[BuildingValue]
,[TotalValue]
,[YearBuilt]
,[Bedrooms]
,[FullBath]
,[HalfBath]
FROM HOUSEDATA.dbo.NashvilleHousing


/*
Cleaning Data in SQL Queries
*/

Select * from HOUSEDATA.dbo.NashvilleHousing

--Standardize [Sale]Date Format

SELECT SaleDate, CONVERT(Date,SaleDate) 
FROM HOUSEDATA.dbo.NashvilleHousing

UPDATE NashvilleHousing
SET SaleDate = CONVERT(Date,SaleDate)

ALTER TABLE NashvilleHousing
ADD SaleDateConverted Date;

UPDATE NashvilleHousing
SET SaleDateConverted = CONVERT(Date,SaleDate)

SELECT SaleDateConverted, CONVERT(Date,SaleDate) 
FROM HOUSEDATA.dbo.NashvilleHousing

-- Populate Property Address data

SELECT *
FROM HOUSEDATA.dbo.NashvilleHousing
--WHERE PropertyAddress is null;
ORDER BY ParcelID

--parcel ID and Property address are equal, so fix nulls

SELECT a.ParcelID,a.PropertyAddress,b.ParcelID,b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM HOUSEDATA.dbo.NashvilleHousing a
JOIN HOUSEDATA.dbo.NashvilleHousing b 
ON a.ParcelID = b.ParcelID
AND a.[UniqueID ] <> b.[UniqueID ]
--WHERE a.PropertyAddress is null

UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM HOUSEDATA.dbo.NashvilleHousing a
JOIN HOUSEDATA.dbo.NashvilleHousing b 
ON a.ParcelID = b.ParcelID
AND a.[UniqueID ] <> b.[UniqueID ]
WHERE a.PropertyAddress is null

-- Breaking out Address into Indiviual Columns 

SELECT PropertyAddress
FROM HOUSEDATA.dbo.NashvilleHousing
--WHERE PropertyAddress is null;
--ORDER BY ParcelID

-- substring and character index

SELECT
SUBSTRING(PropertyAddress,1,CHARINDEX(',',PropertyAddress) -1) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',',PropertyAddress) +1, LEN(PropertyAddress)) as City
-- CHARINDEX(',',PropertyAddress) 
FROM HOUSEDATA.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
ADD PropertySplitAddress NVARCHAR(255) ;

UPDATE NashvilleHousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress,1,CHARINDEX(',',PropertyAddress) -1)


ALTER TABLE NashvilleHousing
ADD PropertySplitCity NVARCHAR(255) ;

UPDATE NashvilleHousing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',',PropertyAddress) +1, LEN(PropertyAddress))

SELECT *
FROM NashvilleHousing

-- split owner address (Address, City, State)

SELECT OwnerAddress
FROM NashvilleHousing

--PARSENAME

SELECT
PARSENAME(REPLACE(OwnerAddress,',','.'),3)
, PARSENAME(REPLACE(OwnerAddress,',','.'),2)
, PARSENAME(REPLACE(OwnerAddress,',','.'),1)
FROM NashvilleHousing

ALTER TABLE NashvilleHousing
ADD OwnerSplitAddress NVARCHAR(255) ;

UPDATE NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress,',','.'),3)

ALTER TABLE NashvilleHousing
ADD OwnerSplitCity NVARCHAR(255) ;

UPDATE NashvilleHousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress,',','.'),2)


ALTER TABLE NashvilleHousing
ADD OwnerSplitState NVARCHAR(255) ;

UPDATE NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress,',','.'),1)

Select * 
FROM HOUSEDATA.dbo.NashvilleHousing


-- CHange Y to Yes and N to no in "Sold as vacant" field

SELECT DISTINCT(SoldAsVacant),COUNT(SoldAsVacant)
FROM HOUSEDATA.dbo.NashvilleHousing
GROUP BY SoldAsVacant


SELECT SoldAsVacant
, CASE When SoldAsVacant ='Y' THEN 'Yes'
    WHEN SoldAsVacant = 'N' THEN 'No'
    ELSE SoldAsVacant
    END
FROM HOUSEDATA.dbo.NashvilleHousing

UPDATE NashvilleHousing
SET SoldAsVacant = CASE When SoldAsVacant ='Y' THEN 'Yes'
    WHEN SoldAsVacant = 'N' THEN 'No'
    ELSE SoldAsVacant
    END


-- Remove Duplicates
WITH RowNumCTE AS(
SELECT *, 
    ROW_NUMBER() OVER (
    PARTITION BY ParcelID, 
                    PropertyAddress,
                    SalePrice,
                    SaleDate,
                    LegalReference
                    ORDER BY UniqueID
    ) row_num
FROM HOUSEDATA.dbo.NashvilleHousing
--ORDER BY ParcelID
)
Select *
--DELETE
FROM RowNumCTE
WHERE row_num = 1
Order BY PropertyAddress
--ORDER BY row_num desc
--HOUSEDATA.dbo.NashvilleHousing


Select *
FROM RowNumCTE
WHERE row_num > 1
Order BY PropertyAddress

Select * FROM HOUSEDATA.dbo.NashvilleHousing



--REmove unused columns, don't do on raw data, do in views

Select * FROM HOUSEDATA.dbo.NashvilleHousing

ALTER TABLE HOUSEDATA.dbo.NashvilleHousing
DROP COLUMN OwnerAddress,PropertyAddress,TaxDistrict, SaleDate

Select * FROM HOUSEDATA.dbo.NashvilleHousing



